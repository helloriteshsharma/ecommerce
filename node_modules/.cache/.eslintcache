[{"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\index.js":"1","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\App.js":"2","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\Footer.jsx":"4","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\Router\\AllRoutes.jsx":"5","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\Navbar.jsx":"6","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\Router\\ProtectedRoute.jsx":"7","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\NotFound.jsx":"8","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\Profile.jsx":"9","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Home.jsx":"10","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\OrderDetails.jsx":"11","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Product.jsx":"12","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Payment.jsx":"13","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\AdminLogIn.jsx":"14","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Registration.jsx":"15","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\ShippingDetails.jsx":"16","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\PaymentForm.jsx":"17","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\SingleProduct.jsx":"18","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Admin.jsx":"19","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Cart.jsx":"20","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\LogIn.jsx":"21","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\Router\\api.jsx":"22","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\UpdateAddress.jsx":"23","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\Address.jsx":"24","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\Slider.jsx":"25","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\AddProduct.jsx":"26","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\AllProductAdmin.jsx":"27","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\AdminUserDetails.jsx":"28","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\AllOrderAdmin.jsx":"29","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\UpdateProductForm.jsx":"30"},{"size":579,"mtime":1736868478704,"results":"31","hashOfConfig":"32"},{"size":680,"mtime":1737211042972,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1736868478721,"results":"34","hashOfConfig":"32"},{"size":1987,"mtime":1736868479126,"results":"35","hashOfConfig":"32"},{"size":1940,"mtime":1736868478748,"results":"36","hashOfConfig":"32"},{"size":2636,"mtime":1736868479135,"results":"37","hashOfConfig":"32"},{"size":545,"mtime":1736868478767,"results":"38","hashOfConfig":"32"},{"size":263,"mtime":1736868479146,"results":"39","hashOfConfig":"32"},{"size":5890,"mtime":1736868479162,"results":"40","hashOfConfig":"32"},{"size":2489,"mtime":1736868479246,"results":"41","hashOfConfig":"32"},{"size":4457,"mtime":1736868479274,"results":"42","hashOfConfig":"32"},{"size":5364,"mtime":1736868479316,"results":"43","hashOfConfig":"32"},{"size":2166,"mtime":1736868479286,"results":"44","hashOfConfig":"32"},{"size":2752,"mtime":1736868479220,"results":"45","hashOfConfig":"32"},{"size":3187,"mtime":1736868479322,"results":"46","hashOfConfig":"32"},{"size":2131,"mtime":1736868479335,"results":"47","hashOfConfig":"32"},{"size":2639,"mtime":1736868479300,"results":"48","hashOfConfig":"32"},{"size":2144,"mtime":1736868479358,"results":"49","hashOfConfig":"32"},{"size":2112,"mtime":1736868479216,"results":"50","hashOfConfig":"32"},{"size":5082,"mtime":1736868479236,"results":"51","hashOfConfig":"32"},{"size":3696,"mtime":1737212249017,"results":"52","hashOfConfig":"32"},{"size":375,"mtime":1736868478780,"results":"53","hashOfConfig":"32"},{"size":2937,"mtime":1736868479185,"results":"54","hashOfConfig":"32"},{"size":2853,"mtime":1736868479064,"results":"55","hashOfConfig":"32"},{"size":585,"mtime":1736868479174,"results":"56","hashOfConfig":"32"},{"size":3312,"mtime":1736868479052,"results":"57","hashOfConfig":"32"},{"size":3871,"mtime":1736868479115,"results":"58","hashOfConfig":"32"},{"size":2235,"mtime":1736868479074,"results":"59","hashOfConfig":"32"},{"size":2477,"mtime":1736868479100,"results":"60","hashOfConfig":"32"},{"size":2321,"mtime":1736868479192,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qx6zsz",{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128"},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","suppressedMessages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149"},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\index.js",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\App.js",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\Footer.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\Router\\AllRoutes.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\Navbar.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\Router\\ProtectedRoute.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\NotFound.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\Profile.jsx",["165","166","167","168"],[],"import React, { useState, useEffect } from \"react\";\nimport api from \"../Router/api\";\nimport \"../comp_css/Profile.css\";\nimport Address from \"../components/Address\";\nimport UpdateAddress from \"../components/UpdateAddress\";\n\nconst userid = localStorage.getItem(\"userid\");\nconst passData={\n  newpass:\"\"\n}\n\n\n\nconst Profile = () => {\n  const [profileData, setProfileData] = useState(null);\n  const [add, setAdd] = useState(null);\n  const [addressModal, setAddressModal] = useState(false);\n  const [updateaddressModal, setUpdateAddressModal] = useState(false);\n  const [showPassSection, setShowPassSection] = useState(false);\n  const [passform, setNewPassword1] = useState(\"\");\n  const [error, setError] = useState(null);\n\n  const handleChange = (e) => {\n    const val = e.target.value;\n    setNewPassword1({ ...passform, [e.target.name]: val });\n  };\n\n  const handleSubmit = (e) => {\n    \n    e.preventDefault();\n\n    api\n      .put(`/ecom/customers/update-password/${userid}`, passform)\n      .then((response) => {\n        alert(\"Password updated successfully\");\n        setShowPassSection(false);\n      })\n      .catch((error) => {\n        alert(\"Error occures Try letter....\")\n      });\n  };\n  const changePassword = () => {\n    setShowPassSection(true);\n  };\n\n  const handlerUpdateAddress = (latestAddress) => {\n    setAdd(latestAddress);\n    setUpdateAddressModal(true);\n  };\n\n  const showUpdateAddAddressModal = () => {\n    setUpdateAddressModal(false);\n  };\n  const showAddAddressModal = () => {\n    setAddressModal(false);\n  };\n  const handlerAddAddress = (userid) => {\n    setAddressModal(true);\n    console.log(\"called...... show\");\n  };\n\n  useEffect(() => {\n    api\n      .get(`/ecom/customers/${userid}`)\n      .then((response) => {\n        setProfileData(response.data);\n        setAddressModal(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data from the API: \", error);\n      });\n  }, [userid]);\n\n\n  const {newpass}=passform;\n  const latestAddress = profileData?.address?.length\n    ? profileData.address[profileData.address.length - 1]\n    : null;\n\n  return (\n    <>\n      <h2\n        style={{\n          color: \"green\",\n          textAlign: \"center\",\n          margin: \"20px\",\n        }}\n      >\n        Profile Section\n      </h2>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"flex-start\",\n        }}\n      >\n        <div className=\"profile-container\">\n          {addressModal && <Address onclose={showAddAddressModal} />}\n          {updateaddressModal && (\n            <UpdateAddress address={add} onclose={showAddAddressModal} />\n          )}\n\n          <div className=\"profile-details\">\n            <h1 className=\"profile-header\">Profile Details</h1>\n\n            {profileData ? (\n              <>\n                <p style={{ color: \"green\" }}>\n                  <strong>Account Status:</strong>{\" \"}\n                  {profileData.userAccountStatus}\n                </p>\n                <p>\n                  <strong>Name:</strong> {profileData.firstName}{\" \"}\n                  {profileData.lastName}\n                </p>\n                <p>\n                  <strong>Email:</strong> {profileData.email}\n                </p>\n\n                <p>\n                  <strong>Phone Number:</strong> {profileData.phoneNumber}\n                </p>\n                <p>\n                  <strong>Registration :</strong>{\" \"}\n                  {profileData.registerTime.substring(0, 10)}\n                </p>\n              </>\n            ) : (\n              <p>Loading profile data...</p>\n            )}\n          </div>\n          <div className=\"latest-address\">\n            {latestAddress ? (\n              <>\n                <h2 className=\"latest-address-header\">Latest Address</h2>\n                <p>\n                  <strong>Buiding :</strong> {latestAddress.flatNo}\n                </p>\n                <p>\n                  <strong>Street:</strong> {latestAddress.street}\n                </p>\n                <p>\n                  <strong>City:</strong> {latestAddress.city}\n                </p>\n                <p>\n                  <strong>State:</strong> {latestAddress.state}\n                </p>\n                <p>\n                  <strong>Zip Code:</strong> {latestAddress.zipCode}\n                </p>\n\n                <button\n                  onClick={() => {\n                    handlerUpdateAddress(latestAddress);\n                  }}\n                >\n                  Update Address\n                </button>\n              </>\n            ) : (\n              <>\n                <h2>Address Not updated</h2>\n                <button\n                  onClick={() => {\n                    handlerAddAddress();\n                  }}\n                >\n                  Add Address\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n        <div className=\"updatePassword\">\n          {showPassSection ? (\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"newPassword\">New Password:</label>\n              <input\n                type=\"password\"\n                name=\"newPassword\"\n                value={newpass}\n                onChange={handleChange}\n              />\n              {error && <p className=\"error\">{error}</p>}\n              <button type=\"submit\">Update Password</button>\n              <button\n                type=\"button\"\n                onClick={() => {\n                  setShowPassSection(false);\n                }}\n              >\n                Cancel update\n              </button>\n            </form>\n          ) : (\n            <button\n              onClick={() => {\n                changePassword();\n              }}\n            >\n              ChangePassword\n            </button>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Profile;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Home.jsx",["169","170"],[],"import React,{useEffect} from \"react\";\nimport Slider from \"../components/Slider\";\n\nimport \"../comp_css/Slider.css\"\nimport Atta from \"../picture/Atta_and_dals.avif\";\nimport Beauty from \"../picture/Beauty_and_personal_care.avif\";\nimport Cleaning from \"../picture/Cleaning_essentials.avif\";\nimport Home_essentials from \"../picture/Home_essentials.avif\";\nimport kids_fashion from \"../picture/kids_fashion.avif\";\nimport Kitchen_must_haves from \"../picture/Kitchen_must_haves.avif\";\nimport Laptops_and_Tablets from \"../picture/Laptops_and_Tablets.avif\";\nimport men_fashion from \"../picture/men_fashion.avif\";\nimport Oil_and_ghee from \"../picture/Oil_and_ghee.avif\";\nimport Smart_Televisions from \"../picture/Smart_Televisions.avif\";\n\n\nconst Home = () => {\n  const veritycard = [\n    Atta,\n    Beauty,\n    Cleaning,\n    Home_essentials,\n    kids_fashion,\n    Kitchen_must_haves,\n    Laptops_and_Tablets,\n    men_fashion,\n    Oil_and_ghee,\n    Smart_Televisions,\n  ];\n  const slideImages = [\n    \"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691935239_Freedom_Finds.jpg?im=Resize=(1680,320)\",\n    \"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691950461_Handloom_Sarees_in_Colors_of_India.jpg?im=Resize=(1680,320)\",\n    \"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691612739_Aaj_Ki_Deals_Desktop.jpg?im=Resize=(1680,320)\",\n  ];\n  const slideImages2 = [\n    \"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691773740_Paytm_Wallet_1240x209.jpg?im=Resize=(1241,195)\",\n    \"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691435554_MobiKwik_1240x209.jpg?im=Resize=(1241,195)\",\n  ];\n  const styleFixedImg = {\n    width: \"100%\",\n    height: \"25vh\",\n    marginTop: \"10px\",\n    marginBottom: \"10px\",\n  };\n  useEffect(() => {\n    document.title = 'Ecommerse | Home Page';\n    return () => { \n      document.title = 'Ecommerse App';\n    };\n  }, []); \n\n  return (\n    <>\n      <div>\n        <Slider images={slideImages} interval={4000} />\n      </div>\n      <div className=\"ImageFixed\">\n        <img\n          style={styleFixedImg}\n          src=\"https://www.jiomart.com/images/cms/aw_rbslider/slides/1691749079_Aaj_Ki_Deals.jpg?im=Resize=(1240,150)\"\n          alt=\"Image\"\n        />\n      </div>\n      <div>\n        <Slider images={slideImages2} interval={5000} />\n      </div>\n      <div className=\"cardbox\">\n        {veritycard.map((el, index) => (\n          <img src={el} alt={`image${index}`} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\OrderDetails.jsx",["171","172"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate, useNavigation } from \"react-router-dom\";\nimport Profile from \"../components/Profile\";\nimport api from \"../Router/api\";\n\nimport \"../comp_css/order.css\";\n\nconst OrderDetails = () => {\n  const navigate = useNavigate();\n  const userId = localStorage.getItem(\"userid\");\n  const [deleted, setDeleted] = useState(false);\n  const [allOrder, setAllOrder] = useState([]);\n\n  const handeldemakePayment = (orderid) => {\n    localStorage.setItem(\"orderid\", orderid);\n    navigate(\"/user/make-payment\");\n  };\n\n  const handleProfileSection = (userid) => {\n    navigate(`/user/profile/${userid}`);\n  };\n \n  const handeldeleteOrder = (orderId) => {\n    axios\n      .delete(`http://127.0.0.1:8080/ecom/orders/users/${userId}/${orderId}`)\n      .then((response) => {\n        alert(response.data);\n\n        const updatedAllOrder = allOrder.filter(\n          (order) => order.orderId !== orderId\n        );\n        setAllOrder(updatedAllOrder);\n        setDeleted(true);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data from the API: \", error);\n      });\n  };\n\n  useEffect(() => {\n    document.title = \"Ecommerse | Order details\";\n    api\n      .get(`/ecom/orders/orders/${userId}`)\n      .then((response) => {\n        const sortedOrders = response.data.sort((a, b) => {\n          return new Date(b.orderDate) - new Date(a.orderDate);\n        });\n        setAllOrder(sortedOrders);\n        setDeleted(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data from the API: \", error);\n      });\n  }, [deleted, userId]);\n\n \n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"orderContainer\">\n       { allOrder.length > 0 ? (\n              allOrder.map((order, index) => (\n                <div key={index} className=\"order\">\n                  <div className=\"odr1\">\n                    <h3>Order Number : {index + 1}</h3>\n                    <p>Order ID: {order.orderId}</p>\n                    <p>Status: {order.status}</p>\n                    <p>\n                      Order Date: {new Date(order.orderDate).toLocaleString()}\n                    </p>\n                    <h3 style={{ color: \"green\" }}>\n                      Total Amount: ${order.totalAmount}\n                    </h3>\n\n                    {order.status === \"SHIPPED\" ? (\n                      <button style={{ backgroundColor: \"green\" }} disabled>\n                        View\n                      </button>\n                    ) : (\n                      <button\n                        style={{ backgroundColor: \"red\" }}\n                        onClick={() => {\n                          handeldeleteOrder(order.orderId);\n                        }}\n                      >\n                        Cancel Order\n                      </button>\n                    )}\n\n                    {order.status === \"SHIPPED\" ? (\n                      <button style={{ backgroundColor: \"green\" }} disabled>\n                        SHIPPED\n                      </button>\n                    ) : (\n                      <button\n                        onClick={() => {\n                          handeldemakePayment(order.orderId);\n                        }}\n                      >\n                        Make Payment\n                      </button>\n                    )}\n                  </div>\n\n                  <div className=\"odr2\">\n                    <h3>Order Items</h3>\n                    {order.orderItem.map((item) => (\n                      <li key={item.orderItemId}>\n                        {item.product.name} - Quantity: {item.quantity}\n                      </li>\n                    ))}\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div\n                style={{\n                  color: \"green\",\n                  fontSize: \"20px\",\n                  border: \"2px solid grey\",\n                  height: \"50vh\",\n                  textAlign: \"center\",\n                }}\n              >\n                <h1 style={{ marginTop: \"50px\" }}>No items present</h1>\n              </div>\n            )}\n        </div>\n        <div className=\"box\">\n          <h3>Order History</h3>\n          <button onClick={() => handleProfileSection(userId)}>\n            View Profile\n          </button>\n          \n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default OrderDetails;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Product.jsx",["173"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../comp_css/Product.css\";\nimport api from \"../Router/api\";\n\nconst Product = () => {\n  const [products, setProducts] = useState([]);\n  const [filteredProducts, setFilteredProducts] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\n  const [priceOrder, setPriceOrder] = useState(\"All\");\n  const [nameSearch, setNameSearch] = useState(\"\");\n  let userid = localStorage.getItem(\"userid\");\n\n  const filterProducts = (category, priceOrder, nameSearch, data) => {\n    let filteredProducts = data;\n\n    if (category !== \"All\") {\n      filteredProducts = filteredProducts.filter(\n        (product) => product.category === category\n      );\n    }\n    \n    if (priceOrder === \"LowToHigh\") {\n      filteredProducts = filteredProducts.sort((a, b) => a.price - b.price);\n    } else if (priceOrder === \"HighToLow\") {\n      filteredProducts = filteredProducts.sort((a, b) => b.price - a.price);\n    }\n\n    if (nameSearch !== \"\") {\n      const searchQuery = nameSearch.toLowerCase();\n      filteredProducts = filteredProducts.filter((product) =>\n        product.name.toLowerCase().includes(searchQuery)\n      );\n    }\n\n    setFilteredProducts(filteredProducts);\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://127.0.0.1:8080/ecom/products/all\")\n      .then((response) => {\n        setProducts(response.data);\n        filterProducts(selectedCategory, priceOrder, nameSearch, response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data from the API: \", error);\n      });\n  }, [selectedCategory, priceOrder, nameSearch]);\n\n  const addProductToCart = (productid) => {\n    api\n      .post(`/ecom/cart/add-product?userId=${userid}&productId=${productid}`)\n      .then((response) => {\n        localStorage.setItem(\"cartid\", response.data.cartId);\n        alert(\"product added to Cart\");\n      })\n      .catch((error) => {\n        if (error.response && error.response.data) {\n          alert(error.response.data.message);\n        } else {\n          alert(\"Error To adding Product . Please try again later.\");\n          console.error(\"Error registering:\", error);\n        }\n      });\n  };\n\n  return (\n    <div className=\"product-page\">\n      <div className=\"filter-section\">\n        <h2>Filter</h2>\n        <hr />\n        <label>Category</label>\n        <select\n          value={selectedCategory}\n          onChange={(e) => {\n            setSelectedCategory(e.target.value);\n          }}\n        >\n          <option value=\"All\">All</option>\n          <option value=\"vegetables\">Vegetable</option>\n          <option value=\"fruits\">Fruits</option>\n          <option value=\"electronics\">Electronic</option>\n          <option value=\"gadgets\">Gaggets</option>\n        </select>\n        <br />\n        <label>Price:</label>\n        <div>\n          <select\n            value={priceOrder}\n            onChange={(e) => {\n              setPriceOrder(e.target.value);\n            }}\n          >\n            <option value=\"All\">All</option>\n            <option value=\"LowToHigh\">Low to High</option>\n            <option value=\"HighToLow\">High To Low</option>\n          </select>\n        </div>\n\n        <br />\n        <div>\n          <h4>By Name</h4>\n          <input\n            type=\"text\"\n            placeholder=\"Search by name\"\n            value={nameSearch}\n            onChange={(e) => setNameSearch(e.target.value)}\n          />\n        </div>\n      </div>\n\n      <div className=\"product-list\">\n        {filteredProducts.length === 0 ? (\n          <h1\n            style={{\n              textAlign: \"center\",\n              margin: \"50px\",\n              color: \"green\",\n              width: \"800px\",\n            }}\n          >\n            Product Not found ....\n          </h1>\n        ) : (\n          filteredProducts.map((product) => (\n            <div className=\"product-card\" key={product.productId}>\n              <div className=\"product-image1\">\n                <img src={product.imageUrl} alt={product.name} />\n              </div>\n              <div className=\"product-info\">\n                <h2>{product.name}</h2>\n                <p>\n                  <strong>Category :</strong> {product.category}\n                </p>\n                <p>\n                  <strong>Description: </strong>\n                  {product.description.substring(0, 25)}\n                </p>\n                <h2 className=\"product-price\">Price: ₹ {product.price}</h2>\n                <p>\n                  {\" \"}\n                  <strong>Rating :</strong>\n                  {product.reviews.length === 0\n                    ? \"Not Available\"\n                    : product.reviews[0].rating}\n                </p>\n\n                <div>\n                  <button onClick={() => addProductToCart(product.productId)}>\n                    Add to Cart\n                  </button>\n                  <button>\n                    <Link\n                      to={`/product/${product.productId}`}\n                      style={{ textDecoration: \"none\", color: \"white\" }}\n                    >\n                      View\n                    </Link>\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Product;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Payment.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\AdminLogIn.jsx",["174","175"],[],"import React, { useState, useEffect } from \"react\";\nimport \"../comp_css/Login.css\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst formData = {\n  username: \"\",\n  password: \"\",\n};\nconst AdminLogin = () => {\n  const navigate = useNavigate();\n  const [form, setForm] = useState(formData);\n\n  useEffect(() => {\n    document.title = \"Ecommerse | Admin LogIn\";\n    return () => {\n      document.title = \"Ecommerse App\";\n    };\n  }, []);\n  const setHandlerChange = (e) => {\n    const val = e.target.value;\n    setForm({ ...form, [e.target.name]: val });\n  };\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    try {\n      const authHeader = `Basic ${btoa(`${form.username}:${form.password}`)}`;\n      const response = await axios.get(\"http://localhost:8080/ecom/signIn\", {\n        headers: {\n          Authorization: authHeader,\n        },\n      });\n\n      if (response.headers.authorization != undefined) {\n        localStorage.setItem(\"jwtToken\", response.headers.authorization);\n        localStorage.setItem(\"adminid\", response.data.id);\n        alert(\"Admin Login successfully\");\n        navigate(\"/admin/admin\");\n      } else {\n        alert(\"Invalid Credential\");\n        console.error(\"JWT retrieval failed\");\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        alert(\"Invalid credentials. Please try again.\");\n      } else {\n        alert(\"Error during login. Please try again later.\");\n        console.error(\"Error during login:\", error);\n      }\n    }\n  };\n\n  const { username, password } = form;\n\n  return (\n    <>\n      <h2 style={{ textAlign: \"center\", color: \"White\", margin: \"10px\" }}>\n        WELCOME TO ADMIN LOGIN PAGE\n      </h2>\n\n      <div className=\"loginConatiner\">\n        <div className=\"login-form\">\n          <h2 style={{ textAlign: \"center\" }}>Admin LogIn </h2>\n          <form onSubmit={submitHandler}>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username:</label>\n              <input\n                id=\"username\"\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={setHandlerChange}\n              />\n            </div>\n            <br />\n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={setHandlerChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" value=\"Login\" />\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default AdminLogin;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Registration.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\ShippingDetails.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\PaymentForm.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\SingleProduct.jsx",["176"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport api from '../Router/api'\nimport \"../comp_css/SingleProduct.css\";\nimport axios from \"axios\";\n\nconst SingleProduct = () => {\n  const navigate = useNavigate();\n  const { productId } = useParams();\n  const [product, setProduct] = useState({});\n  const userid = localStorage.getItem(\"userid\");\n\n  useEffect(() => {\n    axios\n      .get(`http://127.0.0.1:8080/ecom/products/${productId}`)\n      .then((response) => {\n        setProduct(response.data);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data from the API: \", error);\n      });\n  }, [productId]);\n\n  const addProductToCart = (productid) => {\n    api\n      .post(\n        `/ecom/cart/add-product?userId=${userid}&productId=${productid}`\n      )\n      .then((response) => {\n        localStorage.setItem(\"cartid\", response.data.cartId);\n        alert(\"Product added to Cart.....\");\n      })\n      .catch((error) => {\n        alert(\"Product Alredy in cart......\");\n      });\n  };\n  return (\n    <>\n    <h1 style={{color:\"green\",textAlign:\"center\",margin:\"20px\"}}>Single Product </h1>\n    <div className=\"product-container\">\n     \n      <div className=\"product-details\">\n        <div className=\"product_image\">\n          <img src={product.imageUrl} alt={product.name} />\n        </div>\n\n        <div className=\"product_details\">\n          <h2>{product.name}</h2>\n          <p>Category: {product.category}</p>\n          <p>Description: {product.description}</p>\n          <p>Price: ₹ {product.price}</p>\n\n          <div>\n            <button\n              onClick={() => {\n                addProductToCart(product.productId);\n              }}\n            >\n              Add to Cart\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"counter-box\">\n        <div>\n          <button\n            onClick={() => {\n              navigate(\"/user/cart\");\n            }}\n          >\n            Move To Cart\n          </button>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n};\n\nexport default SingleProduct;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Admin.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\Cart.jsx",["177"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport api from \"../Router/api\";\nimport \"../comp_css/Cart.css\";\n\nconst Cart = () => {\n  const navigate = useNavigate();\n  const [cartData, setCartData] = useState({});\n  const [totalAmount, setTotalAmount] = useState(0);\n  let cartId = localStorage.getItem(\"cartid\");\n  let userId = localStorage.getItem(\"userid\");\n\n  const apiCallOrderPlaced = () => {\n    api\n      .post(`/ecom/orders/placed/${userId}`)\n      .then((response) => {\n        alert(\"Order Placed Succesfuly.....\");\n        navigate(\"/user/order-details\");\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data from the API: \", error);\n      });\n  };\n\n  const orderPlaced = () => {\n    apiCallOrderPlaced();\n    \n  };\n  const fetchCartData = () => {\n    api\n      .get(`/ecom/cart/products/${cartId}`)\n      .then((response) => {\n        setCartData(response.data);\n        setTotalAmount(response.data.totalAmount);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data from the API: \", error);\n      });\n  };\n\n  useEffect(() => {\n    document.title = \"Ecommerse | Cart\";\n    fetchCartData();\n  }, [cartId, totalAmount]);\n  const emptyCart = () => {\n    api\n      .delete(`/ecom/cart/empty-Cart/${cartId}`)\n      .then((response) => {\n        setTotalAmount(response.data.toalAmout);\n        alert(\"All cart Item remove\");\n        fetchCartData();\n      })\n      .catch((error) => {\n        alert(\"Cart is empty\");\n      });\n  };\n\n  const removeProductfromCart = (productid) => {\n    api\n      .delete(`/ecom/cart/remove-product/${cartId}/${productid}`)\n      .then((response) => {\n        alert(\"Product removed from cart\");\n        fetchCartData();\n      })\n      .catch((error) => {\n        alert(\"Cart is empty\");\n      });\n  };\n\n  const increaseCount = (productid) => {\n    api\n      .put(`/ecom/cart/increase-productQty/${cartId}/${productid}`)\n      .then((response) => {\n        setTotalAmount(response.data.totalAmount);\n        fetchCartData();\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const decreaseCount = (productid) => {\n    api\n      .put(`ecom/cart/decrease-productQty/${cartId}/${productid}`)\n      .then((response) => {\n        setTotalAmount(response.data.totalAmount);\n        fetchCartData();\n      })\n      .catch((error) => {\n        console.log(error);\n        alert(\"Product can be further decrese....\");\n      });\n  };\n\n  return (\n    <div className=\"cart-page\">\n      {cartData.cartItems?.length > 0 ? (\n        <div className=\"cart-list\">\n          {cartData.cartItems.map((item) => (\n            <div className=\"cart-card\" key={item.cartItemId}>\n              <div className=\"cartproduct-image1\">\n                <img src={item.product.imageUrl} alt={item.product.name} />\n              </div>\n              <div className=\"cartproduct-info\">\n                <h2>{item.product.name}</h2>\n                <p>Category: {item.product.category}</p>\n                <p>Description: {item.product.description}</p>\n                <h2 className=\"cartproduct-price\">\n                  Price: ₹ {item.product.price}\n                </h2>\n                <div className=\"increaseBtn\">\n                  <button onClick={() => increaseCount(item.product.productId)}>\n                    +\n                  </button>\n                  <span\n                    style={{\n                      fontSize: \"25px\",\n                      color: \"red\",\n                      textAlign: \"center\",\n                    }}\n                  >\n                    {item.quantity}\n                  </span>\n                  <button onClick={() => decreaseCount(item.product.productId)}>\n                    -\n                  </button>\n                </div>\n                <div>\n                  <button\n                    onClick={() =>\n                      removeProductfromCart(item.product.productId)\n                    }\n                  >\n                    Remove\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"empty-cart-message\">\n          <h1>\n            Your cart is empty. <Link to=\"/\">Shop Now</Link>\n          </h1>\n        </div>\n      )}\n\n      <div className=\"cart-details\">\n        <h2>Total Cart Amount: </h2>\n        <h2>${\"   \" + totalAmount}</h2>\n        <div className=\"counter-box\">\n          <div>\n            <button onClick={orderPlaced}>Order Placed</button>\n          </div>\n          <div>\n            <button\n              onClick={() => emptyCart(cartId)}\n              style={{ backgroundColor: \"red\" }}\n            >\n              Empty Cart\n            </button>\n          </div>\n          <div>\n            <button\n              onClick={() => {\n                navigate(\"/user/order-details\");\n              }}\n            >\n              Order Page\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Cart;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\pages\\LogIn.jsx",["178"],[],"import React, { useState, useEffect } from \"react\";\nimport \"../comp_css/Login.css\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport loginbg from \"../picture/loginbg1.webp\";\n\nconst bg = {\n  backgroundImage: `url(${loginbg})`,\n  backgroundSize: \"cover\",\n  backgroundRepeat: \"no-repeat\",\n  backgroundPosition: \"center center\",\n  border: \"1px solid grey\",\n  height: \"100vh\",\n};\n\nconst formData = {\n  username: \"\",\n  password: \"\",\n};\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [form, setForm] = useState(formData);\n  \n  useEffect(() => {\n    document.title = 'Ecommerse | LogIn';\n    return () => { \n      document.title = 'Ecommerse App';\n    };\n  }, []); \n\n\n  const setHandlerChange = (e) => {\n    const val = e.target.value;\n    setForm({ ...form, [e.target.name]: val });\n  };\n\n  const submitHandler = async (e) => {\n    e.preventDefault();\n\n    try {\n      const authHeader = `Basic ${btoa(`${form.username}:${form.password}`)}`;\n      const response = await axios.get(\"http://localhost:8080/ecom/signIn\", {\n        headers: {\n          Authorization: authHeader,\n        },\n      });\n      //console.log(response.data);\n      if (response.headers.authorization != undefined) {\n        localStorage.setItem(\"jwtToken\", response.headers.authorization);\n        localStorage.setItem(\"name\", response.data.firstNAme || \"LogIn\");\n        localStorage.setItem(\"userid\", response.data.id);\n\n         // Additional API call to a protected endpoint, if needed\n         const token = localStorage.getItem(\"jwtToken\");\n         const protectedResponse = await axios.get('https://your-backend.onrender.com/protected-endpoint', {\n           headers: {\n             Authorization: `Bearer ${token}`,\n           },\n         });\n \n         console.log(\"Protected data:\", protectedResponse.data);  // You can process this data as required\n \n\n        alert(\"Login successfully\");\n        navigate(\"/\");\n      } else {\n        alert(\"Invalid Credential\");\n        console.error(\"JWT retrieval failed\");\n      }\n    } catch (error) {\n      if (error.response && error.response.status === 401) {\n        alert(\"Invalid credentials. Please try again.\");\n      } else {\n        alert(\"Error during login. Please try again later.\");\n        console.error(\"Error during login:\", error);\n      }\n    }\n  };\n\n  const { username, password } = form;\n\n  return (\n    <>\n    <div style={bg}>\n      <h2 style={{ textAlign: \"center\", color: \"White\", margin: \"20px\" }}>\n       WELCOME TO USER LOGIN PAGE\n      </h2>\n      <div className=\"loginConatiner\" >\n        <div className=\"login-form\">\n          <h2 style={{ textAlign: \"center\" }}>LogIn </h2>\n          <form onSubmit={submitHandler}>\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username:</label>\n              <input\n                id=\"username\"\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={setHandlerChange}\n              />\n            </div>\n            <br />\n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={setHandlerChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <input type=\"submit\" value=\"Login\" />\n              <p>\n                Don't have an account?{\" \"}\n                <Link to=\"/register-user\">Register here</Link>\n              </p>\n            </div>\n          </form>\n        </div>\n      </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\Router\\api.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\UpdateAddress.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\Address.jsx",[],[],"C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\Slider.jsx",["179"],[],"import React, { useState, useEffect } from \"react\";\nimport \"../comp_css/Slider.css\"; //\n\nconst Slider = ({ images, interval }) => {\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n\n    const slideInterval = setInterval(() => {\n      setCurrentIndex((prevIndex) => (prevIndex + 1) % images.length);\n    }, interval);\n\n  }, [images, interval]);\n  \n  return (\n    <div className=\"slider\">\n      <img\n        key={currentIndex}\n        src={images[currentIndex]}\n        alt={`Slide ${currentIndex}`}\n       \n      />\n    </div>\n  );\n};\n\nexport default Slider;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\AddProduct.jsx",["180","181"],[],"import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport api from \"../Router/api\";\nimport \"../comp_css/AddProduct.css\";\nimport { Link, useNavigate } from \"react-router-dom\";\n\nfunction AddProduct() {\n  const navigate = useNavigate();\n  const [product, setProduct] = useState({\n    name: \"\",\n    imageUrl: \"\",\n    description: \"\",\n    price: 0,\n    category: \"\",\n    available: true,\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setProduct({ ...product, [name]: value });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      const response = await api.post(\"/ecom/products/add\", product);\n      console.log(\"Product added successfully:\", response.data);\n      setProduct({\n        name: \"\",\n        imageUrl: \"\",\n        description: \"\",\n        price: 0,\n        category: \"\",\n        available: true,\n      });\n      alert(\"Product Added Successfully......\");\n      // Redirect to the admin page after successful submission\n      navigate(\"/admin\");\n    } catch (error) {\n      alert(error.response.data.message);\n      console.error(\"Error adding product:\", error.response.data);\n    }\n  };\n\n  console.log(product);\n\n  return (\n    <div className=\"adminAddProduct\">\n      <h2 style={{ textAlign: \"center\" }}>Add Product</h2>\n      <form onSubmit={handleSubmit}>\n        <div className=\"input-group\">\n          <label htmlFor=\"name\">Product Name:</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            name=\"name\"\n            value={product.name}\n            onChange={handleChange}\n            placeholder=\"Product Name\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"imageUrl\">Image URL:</label>\n          <input\n            type=\"text\"\n            id=\"imageUrl\"\n            name=\"imageUrl\"\n            value={product.imageUrl}\n            onChange={handleChange}\n            placeholder=\"Image URL\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"description\">Description:</label>\n          <input\n            type=\"text\"\n            id=\"description\"\n            name=\"description\"\n            value={product.description}\n            onChange={handleChange}\n            placeholder=\"Description\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"price\">Price:</label>\n          <input\n            type=\"number\"\n            id=\"price\"\n            name=\"price\"\n            value={product.price}\n            onChange={handleChange}\n            placeholder=\"Price\"\n          />\n        </div>\n        <div className=\"input-group\">\n          <label htmlFor=\"category\">Category:</label>\n          <select\n            id=\"category\"\n            name=\"category\"\n            value={product.category}\n            onChange={handleChange}\n          >\n            <option value=\"\">Select a category</option>\n            <option value=\"fruits\">Fruits</option>\n            <option value=\"vegetables\">Vegetables</option>\n            <option value=\"electronics\">Electronic</option>\n            <option value=\"gadgets\">Gadgets</option>\n          </select>\n        </div>\n\n        <button type=\"submit\">Add Product</button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddProduct;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\AllProductAdmin.jsx",["182","183"],[],"import React, { useState, useEffect } from \"react\";\nimport { useParams, Link, useNavigate } from \"react-router-dom\";\nimport \"../comp_css/AllProductAdmin.css\";\nimport axios from \"axios\";\nimport api from \"../Router/api\";\nimport UpdateProductForm from \"./UpdateProductForm\";\n\nconst AllProductAdmin = () => {\n  const { productId } = useParams();\n  const [products, setProducts] = useState([]);\n  const [deleted, setDeleted] = useState(false);\n  const [showUpdateModal, setShowUpdateModal] = useState(false); \n  const [selectedProduct, setSelectedProduct] = useState(null);\n\n  const updateProduct = (productIdToUpdate) => {\n    const productToUpdate = products.find(\n      (product) => product.productId === productIdToUpdate\n    );\n    setSelectedProduct(productToUpdate);\n    setShowUpdateModal(true);\n  };\n\n  const closeUpdateModal = () => {//sending function as a props to the updateproduct form\n    setSelectedProduct(null);\n    setShowUpdateModal(false);\n  };\n  \n  const handleUpdate = (updatedProduct) => {//sending function as a props to the updateproduct form\n    api\n      .put(`/ecom/products/update/${updatedProduct.productId}`, updatedProduct)\n      .then((response) => {\n        console.log(response.data);\n        console.log(\"working.....\");\n        closeUpdateModal();\n      })\n      .catch((error) => {\n        console.log(error.response.data.message);\n      });\n  };\n\n  const deleteProduct = (productIdToDelete) => {\n    api\n      .delete(`/ecom/products/${productIdToDelete}`)\n      .then((response) => {\n        alert(response.data);\n\n        const updatedProducts = products.filter(\n          (product) => product.productId !== productIdToDelete\n        );\n        setProducts(updatedProducts);\n        setDeleted(true);\n      })\n      .catch((error) => {\n        console.error(\"Error deleting product: \", error);\n        alert(error.response.data.message);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"http://127.0.0.1:8080/ecom/products/all?sort=desc\")\n      .then((response) => {\n        const sortedProducts = response.data.sort(\n          (a, b) => b.productId - a.productId\n        );\n        setProducts(sortedProducts);\n\n        setDeleted(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data from the API: \", error);\n      });\n  }, [productId, deleted]);\n\n  return (\n    <>\n      <h1 style={{ color: \"green\", textAlign: \"center\", margin: \"5px\" }}>\n        ALL Live Products{\" \"}\n      </h1>\n\n      {showUpdateModal && (\n        <div className=\"update-modal\">\n          <UpdateProductForm product={selectedProduct} onUpdate={handleUpdate}onClose={closeUpdateModal}\n          />\n        </div>\n      )}\n\n\n      <div className=\"product-container1\">\n        {products.map((product) => (\n          <div className=\"product-card1\" key={product.productId}>\n            <div className=\"product-image11\">\n              <img src={product.imageUrl} alt={product.name} />\n            </div>\n            <div className=\"product-info1\">\n              <h2>{product.name}</h2>\n              <p>Product ID: {product.productId}</p>\n              <p>Category: {product.category}</p>\n              <p>\n                Description:{\" \"}\n                {product.description.length > 30\n                  ? product.description.substring(0, 50) + \"...\"\n                  : product.description}\n              </p>\n\n              <h2 className=\"product-price1\">Price: ₹ {product.price}</h2>\n              <div className=\"button-container1\">\n                <button onClick={() => updateProduct(product.productId)}>\n                  update\n                </button>\n                <button onClick={() => deleteProduct(product.productId)}>\n                  delete\n                </button>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div> \n    </>\n  );\n};\n\nexport default AllProductAdmin;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\AdminUserDetails.jsx",["184"],[],"import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport '../comp_css/AdminUserDetails.css'; \nimport api from '../Router/api';\n\nfunction AdminUserDetails() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    api\n      .get('/ecom/customers/get-all-customer')\n      .then((response) => {\n        // Sort addresses for each user by timestamp in descending order\n        const sortedUsers = response.data.map((user) => ({\n          ...user,\n          address: user.address.sort((a, b) => new Date(b.timestamp) - new Date(a.timestamp)),\n        }));\n        setUsers(sortedUsers);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error('Error fetching data:', error);\n        setLoading(false);\n      });\n  }, []);\n\n  // Function to get the latest address for a user\n  const getLatestAddress = (user) => {\n    const addresses = user.address;\n    if (addresses && addresses.length > 0) {\n      const latestAddress = addresses[0];\n      return (\n        <div>\n          <h3>Latest Address</h3>\n          <p>Flat No: {latestAddress.flatNo}</p>\n          <p>Street: {latestAddress.street}</p>\n          <p>City: {latestAddress.city}</p>\n          <p>State: {latestAddress.state}</p>\n          <p>Zip Code: {latestAddress.zipCode}</p>\n        </div>\n      );\n    } else {\n      return <p>No address available</p>;\n    }\n  };\n\n  return (\n    <div className=\"admin-users\">\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        users.map((user) => (\n          <div className=\"user-card\" key={user.userId}>\n            <div className=\"user-info\">\n              <h3>User Details</h3>\n              <p>User ID: {user.userId}</p>\n              <p>Email: {user.email}</p>\n              <p>Name: {user.firstName} {user.lastName}</p>\n              <p>Phone Number: {user.phoneNumber}</p>\n              <p>Register Time: {user.registerTime}</p>\n              <p>User Account Status: {user.userAccountStatus}</p>\n            </div>\n            <div className=\"user-address\">\n              {getLatestAddress(user)}\n            </div>\n          </div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default AdminUserDetails;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\AllOrderAdmin.jsx",["185"],[],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\"; // Import Axios\nimport \"../comp_css/AllOrderAdmin.css\";\nimport api from \"../Router/api\";\n\nconst AddOrderAdmin = () => {\n  const [orders, setOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    api\n      .get(\"ecom/orders/all\")\n      .then((response) => {\n        setOrders(response.data);\n        setLoading(false);\n      })\n      .catch((error) => {\n        console.error(\"Error fetching data:\", error);\n        setLoading(false);\n      });\n  }, []);\n\n  return (\n    <>\n      <h2 style={{textAlign:\"center\",margin:\"10px\"}}>All Orders Details</h2>\n      <div className=\"admin-orders\">\n        {loading ? (\n          <p>Loading...</p>\n        ) : (\n          orders.map((order) => (\n            <div className=\"order-card\" key={order.orderId}>\n              <div className=\"orderpart\">\n                <h3>Order Details</h3>\n                <p>Order ID: {order.orderId}</p>\n                <p>Status: {order.status}</p>\n                <p>Order Date: {order.orderDate}</p>\n                <hr />\n                {order.orderItem.map((item) => (\n                  <div className=\"order-item\" key={item.orderItemId}>\n                    <p>Product: {item.product.name}</p>\n                    <p>Price: {item.product.price}</p>\n                    <p>Quantity: {item.quantity}</p>\n                  </div>\n                ))}\n              </div>\n              <div className=\"customerdetails\">\n                <h3>Customer Details</h3>\n                <p>User ID: {order.user.userId}</p>\n                <p>\n                  Name: {order.user.firstName} {order.user.lastName}\n                </p>\n                <p>Phone Number: {order.user.phoneNumber}</p>\n\n                <h3>Payment Details</h3>\n                {order.payment ? (\n                  <>\n                    <p>Payment ID: {order.payment.paymentId}</p>\n                    <p>Payment Date: {order.payment.paymentDate}</p>\n                    <p>Payment Amount: {order.payment.paymentAmount}</p>\n                    <p>Payment Method: {order.payment.paymentMethod}</p>\n                    <p>Payment Status: {order.payment.paymentStatus}</p>\n                  </>\n                ) : (\n                  <p>No payment information available</p>\n                )}\n              </div>\n            </div>\n          ))\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default AddOrderAdmin;\n","C:\\Users\\rites\\OneDrive\\Desktop\\Spark2.0-Ecom-master\\frontend\\src\\components\\UpdateProductForm.jsx",[],[],{"ruleId":"186","severity":1,"message":"187","line":8,"column":7,"nodeType":"188","messageId":"189","endLine":8,"endColumn":15},{"ruleId":"186","severity":1,"message":"190","line":21,"column":17,"nodeType":"188","messageId":"189","endLine":21,"endColumn":25},{"ruleId":"186","severity":1,"message":"191","line":51,"column":9,"nodeType":"188","messageId":"189","endLine":51,"endColumn":34},{"ruleId":"192","severity":1,"message":"193","line":72,"column":6,"nodeType":"194","endLine":72,"endColumn":14,"suggestions":"195"},{"ruleId":"196","severity":1,"message":"197","line":58,"column":9,"nodeType":"198","endLine":62,"endColumn":11},{"ruleId":"196","severity":1,"message":"197","line":69,"column":11,"nodeType":"198","endLine":69,"endColumn":49},{"ruleId":"186","severity":1,"message":"199","line":3,"column":23,"nodeType":"188","messageId":"189","endLine":3,"endColumn":36},{"ruleId":"186","severity":1,"message":"200","line":4,"column":8,"nodeType":"188","messageId":"189","endLine":4,"endColumn":15},{"ruleId":"186","severity":1,"message":"201","line":8,"column":10,"nodeType":"188","messageId":"189","endLine":8,"endColumn":18},{"ruleId":"186","severity":1,"message":"202","line":3,"column":23,"nodeType":"188","messageId":"189","endLine":3,"endColumn":27},{"ruleId":"203","severity":1,"message":"204","line":35,"column":42,"nodeType":"205","messageId":"206","endLine":35,"endColumn":44},{"ruleId":"186","severity":1,"message":"202","line":2,"column":21,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"192","severity":1,"message":"207","line":44,"column":6,"nodeType":"194","endLine":44,"endColumn":27,"suggestions":"208"},{"ruleId":"203","severity":1,"message":"204","line":49,"column":42,"nodeType":"205","messageId":"206","endLine":49,"endColumn":44},{"ruleId":"186","severity":1,"message":"209","line":9,"column":11,"nodeType":"188","messageId":"189","endLine":9,"endColumn":24},{"ruleId":"186","severity":1,"message":"210","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"202","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":14},{"ruleId":"186","severity":1,"message":"202","line":2,"column":21,"nodeType":"188","messageId":"189","endLine":2,"endColumn":25},{"ruleId":"186","severity":1,"message":"211","line":2,"column":27,"nodeType":"188","messageId":"189","endLine":2,"endColumn":38},{"ruleId":"186","severity":1,"message":"210","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},{"ruleId":"186","severity":1,"message":"210","line":2,"column":8,"nodeType":"188","messageId":"189","endLine":2,"endColumn":13},"no-unused-vars","'passData' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","'showUpdateAddAddressModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'userid'. Either exclude it or remove the dependency array. Outer scope values like 'userid' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["212"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'useNavigation' is defined but never used.","'Profile' is defined but never used.","'products' is assigned a value but never used.","'Link' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'fetchCartData'. Either include it or remove the dependency array.",["213"],"'slideInterval' is assigned a value but never used.","'axios' is defined but never used.","'useNavigate' is defined but never used.",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: []",{"range":"218","text":"219"},"Update the dependencies array to be: [cartId, fetchCartData, totalAmount]",{"range":"220","text":"221"},[1928,1936],"[]",[1218,1239],"[cartId, fetchCartData, totalAmount]"]